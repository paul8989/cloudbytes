# postgres pvc
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pvc
  namespace: sonar
  labels:
    app.kubernetes.io/instance: sonarqube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
# postgres configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: sonar
  labels:
    app: postgres
    app.kubernetes.io/instance: sonarqube
data:
  POSTGRESQL_USERNAME: sonar_user
  POSTGRESQL_DATABASE: sonar_db
  POSTGRESQL_PASSWORD: S0N4RQUB3
---
# postgres service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: sonar
  labels:
    app: postgres
    app.kubernetes.io/instance: sonarqube
spec:
  ports:
  - port: 5432
    name: postgres
  selector:
    app: postgres
---
# postgres deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: sonar
  labels:
    app: postgres
    app.kubernetes.io/instance: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        fsGroup: 2000 
      containers:
      - name: postgress
        image: bitnami/postgresql:11.15.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        envFrom:
        - configMapRef:
            name: postgres
        volumeMounts:
        - name: postgres
          mountPath: /bitnami/postgresql
      volumes:
      - name: postgres
        persistentVolumeClaim:
          claimName: postgres-pvc